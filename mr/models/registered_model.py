from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mr.models.base_model import Model
from mr.models.versioned_model import VersionedModel
from mr import util

from mr.models.versioned_model import VersionedModel  # noqa: E501

class RegisteredModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, labels=None, versions=None):  # noqa: E501
        """RegisteredModel - a model defined in OpenAPI

        :param name: The name of this RegisteredModel.  # noqa: E501
        :type name: str
        :param labels: The labels of this RegisteredModel.  # noqa: E501
        :type labels: List[str]
        :param versions: The versions of this RegisteredModel.  # noqa: E501
        :type versions: List[VersionedModel]
        """
        self.openapi_types = {
            'name': str,
            'labels': List[str],
            'versions': List[VersionedModel]
        }

        self.attribute_map = {
            'name': 'name',
            'labels': 'labels',
            'versions': 'versions'
        }

        self._name = name
        self._labels = labels
        self._versions = versions

    @classmethod
    def from_dict(cls, dikt) -> 'RegisteredModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RegisteredModel of this RegisteredModel.  # noqa: E501
        :rtype: RegisteredModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this RegisteredModel.


        :return: The name of this RegisteredModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this RegisteredModel.


        :param name: The name of this RegisteredModel.
        :type name: str
        """

        self._name = name

    @property
    def labels(self) -> List[str]:
        """Gets the labels of this RegisteredModel.


        :return: The labels of this RegisteredModel.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels: List[str]):
        """Sets the labels of this RegisteredModel.


        :param labels: The labels of this RegisteredModel.
        :type labels: List[str]
        """

        self._labels = labels

    @property
    def versions(self) -> List[VersionedModel]:
        """Gets the versions of this RegisteredModel.


        :return: The versions of this RegisteredModel.
        :rtype: List[VersionedModel]
        """
        return self._versions

    @versions.setter
    def versions(self, versions: List[VersionedModel]):
        """Sets the versions of this RegisteredModel.


        :param versions: The versions of this RegisteredModel.
        :type versions: List[VersionedModel]
        """

        self._versions = versions
