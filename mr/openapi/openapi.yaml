openapi: 3.0.2
info:
  description: See also https://github.com/opendatahub-io/model-registry/issues/44#issue-1919724627
  title: Model Registry gh44 draft
  version: 1.0.0
servers:
- url: /
paths:
  /registeredmodels:
    description: "The REST endpoint/path used to list and create zero or more `RegisteredModel`\
      \ entities.  This path contains a `GET` and `POST` operation to perform the\
      \ list and create tasks, respectively."
    get:
      description: Gets a list of all `RegisteredModel` entities.
      operationId: get_registered_models
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RegisteredModel'
                type: array
          description: Successful response - returns an array of `RegisteredModel`
            entities.
      summary: List All RegisteredModels
      x-openapi-router-controller: mr.controllers.default_controller
    post:
      description: Creates a new instance of a `RegisteredModel`.
      operationId: create_registered_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisteredModel'
        description: A new `RegisteredModel` to be created.
        required: true
      responses:
        "201":
          description: Successful response.
      summary: Create a RegisteredModel
      x-openapi-router-controller: mr.controllers.default_controller
    summary: Path used to manage the list of registeredmodels.
  /registeredmodels/{registeredmodelId}:
    delete:
      description: Deletes an existing `RegisteredModel`.
      operationId: delete_registered_model
      parameters:
      - description: A unique identifier for a `RegisteredModel`.
        explode: false
        in: path
        name: registeredmodelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful response.
      summary: Delete a RegisteredModel
      x-openapi-router-controller: mr.controllers.default_controller
    description: "The REST endpoint/path used to get, update, and delete single instances\
      \ of an `RegisteredModel`.  This path contains `GET`, `PUT`, and `DELETE` operations\
      \ used to perform the get, update, and delete tasks, respectively."
    get:
      description: Gets the details of a single instance of a `RegisteredModel`.
      operationId: get_registered_model
      parameters:
      - description: A unique identifier for a `RegisteredModel`.
        explode: false
        in: path
        name: registeredmodelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisteredModel'
          description: Successful response - returns a single `RegisteredModel`.
      summary: Get a RegisteredModel
      x-openapi-router-controller: mr.controllers.default_controller
    put:
      description: Updates an existing `RegisteredModel`.
      operationId: update_registered_model
      parameters:
      - description: A unique identifier for a `RegisteredModel`.
        explode: false
        in: path
        name: registeredmodelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisteredModel'
        description: Updated `RegisteredModel` information.
        required: true
      responses:
        "202":
          description: Successful response.
      summary: Update a RegisteredModel
      x-openapi-router-controller: mr.controllers.default_controller
    summary: Path used to manage a single RegisteredModel.
  /versionedmodels:
    description: "The REST endpoint/path used to list and create zero or more `VersionedModel`\
      \ entities.  This path contains a `GET` and `POST` operation to perform the\
      \ list and create tasks, respectively."
    get:
      description: Gets a list of all `VersionedModel` entities.
      operationId: get_versioned_models
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VersionedModel'
                type: array
          description: Successful response - returns an array of `VersionedModel`
            entities.
      summary: List All VersionedModels
      x-openapi-router-controller: mr.controllers.default_controller
    post:
      description: Creates a new instance of a `VersionedModel`.
      operationId: create_versioned_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionedModel'
        description: A new `VersionedModel` to be created.
        required: true
      responses:
        "201":
          description: Successful response.
      summary: Create a VersionedModel
      x-openapi-router-controller: mr.controllers.default_controller
    summary: Path used to manage the list of versionedmodels.
  /versionedmodels/{versionedmodelId}:
    delete:
      description: Deletes an existing `VersionedModel`.
      operationId: delete_versioned_model
      parameters:
      - description: A unique identifier for a `VersionedModel`.
        explode: false
        in: path
        name: versionedmodelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successful response.
      summary: Delete a VersionedModel
      x-openapi-router-controller: mr.controllers.default_controller
    description: "The REST endpoint/path used to get, update, and delete single instances\
      \ of an `VersionedModel`.  This path contains `GET`, `PUT`, and `DELETE` operations\
      \ used to perform the get, update, and delete tasks, respectively."
    get:
      description: Gets the details of a single instance of a `VersionedModel`.
      operationId: get_versioned_model
      parameters:
      - description: A unique identifier for a `VersionedModel`.
        explode: false
        in: path
        name: versionedmodelId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionedModel'
          description: Successful response - returns a single `VersionedModel`.
      summary: Get a VersionedModel
      x-openapi-router-controller: mr.controllers.default_controller
    put:
      description: Updates an existing `VersionedModel` only on updatable fields.
      operationId: update_versioned_model
      parameters:
      - description: A unique identifier for a `VersionedModel`.
        explode: false
        in: path
        name: versionedmodelId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionedModel'
        description: Updated `VersionedModel` information.
        required: true
      responses:
        "202":
          description: Successful response.
      summary: Update a VersionedModel only on updatable fields
      x-openapi-router-controller: mr.controllers.default_controller
    summary: Path used to manage a single VersionedModel.
components:
  schemas:
    Environment:
      description: ""
      example:
        name: My Environment
        uri: http://localhost:8080
      properties:
        name:
          type: string
        uri:
          type: string
      title: Root Type for Environment
      type: object
    VersionedModel:
      description: ""
      example:
        name: my VersionedModel
        id: ae123-78932-64893
        version: v1
        tags:
        - Staging
        labels:
        - tutorial
        - linreg
        environments:
        - name: My Environment
          uri: http://localhost:8080
        created date: 20231002T12:34:56
        updated date: 20231002T12:34:56
      properties:
        name:
          type: string
        id:
          type: string
        version:
          type: string
        tags:
          items:
            type: string
          type: array
        labels:
          items:
            type: string
          type: array
        environments:
          items:
            $ref: '#/components/schemas/Environment'
          type: array
        created date:
          format: date-time
          type: string
        updated date:
          format: date-time
          type: string
      title: Root Type for VersionedModel
      type: object
    RegisteredModel:
      description: ""
      example:
        name: My RegisteredModel
        labels:
        - tutorial
        - linreg
        versions:
        - name: some text
          id: some text
          version: some text
          tags:
          - some text
          - some text
          labels:
          - some text
          - some text
          environments:
          - name: some text
            uri: some text
          - name: some text
            uri: some text
          created date: 2018-02-10T09:30Z
          updated date: 2018-02-10T09:30Z
        - name: some text
          id: some text
          version: some text
          tags:
          - some text
          - some text
          labels:
          - some text
          - some text
          environments:
          - name: some text
            uri: some text
          - name: some text
            uri: some text
          created date: 2018-02-10T09:30Z
          updated date: 2018-02-10T09:30Z
      properties:
        name:
          type: string
        labels:
          items:
            type: string
          type: array
        versions:
          items:
            $ref: '#/components/schemas/VersionedModel'
          type: array
      title: Root Type for RegisteredModel
      type: object
